(source)
    (class_name_statement `class_name StateMachine`)
        (class_name `class_name`)
        (name `StateMachine`)
    (extends_statement `extends Node`)
        (extends `extends`)
        (type `Node`)
            (identifier `Node`)
    (comment `## Hierarchical State machine for the player.`)
    (comment `##`)
    (comment `## Initializes states and delegates engine callbacks ([method Node._physics_process],`)
    (comment `## [method Node._unhandled_input]) to the state.`)
    (signal_statement `signal state_changed(previous, new)`)
        (signal `signal`)
        (name `state_changed`)
        (parameters `(previous, new)`)
            (( `(`)
            (identifier `previous`)
            (, `,`)
            (identifier `new`)
            () `)`)
    (variable_statement `@export var initial_state: Node`)
        (annotations `@export`)
            (annotation `@export`)
                (@ `@`)
                (identifier `export`)
        (var `var`)
        (name `initial_state`)
        (: `:`)
        (type `Node`)
            (identifier `Node`)
    (variable_statement)
        (var `var`)
        (name `is_active`)
        (= `=`)
        (true `true`)
        (setget)
            (: `:`)
            (set `set`)
            (= `=`)
            (setter `set_is_active`)
    (variable_statement)
        (annotations `@onready`)
            (annotation `@onready`)
                (@ `@`)
                (identifier `onready`)
        (var `var`)
        (name `_state`)
        (= `=`)
        (identifier `initial_state`)
        (setget)
            (: `:`)
            (set `set`)
            (= `=`)
            (setter `set_state`)
    (variable_statement `@onready var _state_name = _state.name`)
        (annotations `@onready`)
            (annotation `@onready`)
                (@ `@`)
                (identifier `onready`)
        (var `var`)
        (name `_state_name`)
        (= `=`)
        (attribute `_state.name`)
            (identifier `_state`)
            (. `.`)
            (identifier `name`)
    (constructor_definition)
        (func `func`)
        (_init `_init`)
        (parameters `()`)
            (( `(`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `add_to_group("state_machine")`)
                (call `add_to_group("state_machine")`)
                    (identifier `add_to_group`)
                    (arguments `("state_machine")`)
                        (( `(`)
                        (string `"state_machine"`)
                            (" `"`)
                            (" `"`)
                        () `)`)
    (function_definition)
        (func `func`)
        (name `_enter_tree`)
        (parameters `()`)
            (( `(`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `print("this happens before the ready method!")`)
                (call `print("this happens before the ready method!")`)
                    (identifier `print`)
                    (arguments `("this happens before the ready method!")`)
                        (( `(`)
                        (string `"this happens before the ready method!"`)
                            (" `"`)
                            (" `"`)
                        () `)`)
    (function_definition)
        (func `func`)
        (name `_ready`)
        (parameters `()`)
            (( `(`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `state_changed.connect(_on_state_changed)`)
                (attribute `state_changed.connect(_on_state_changed)`)
                    (identifier `state_changed`)
                    (. `.`)
                    (attribute_call `connect(_on_state_changed)`)
                        (identifier `connect`)
                        (arguments `(_on_state_changed)`)
                            (( `(`)
                            (identifier `_on_state_changed`)
                            () `)`)
            (expression_statement `_state.enter()`)
                (attribute `_state.enter()`)
                    (identifier `_state`)
                    (. `.`)
                    (attribute_call `enter()`)
                        (identifier `enter`)
                        (arguments `()`)
                            (( `(`)
                            () `)`)
    (function_definition)
        (func `func`)
        (name `_unhandled_input`)
        (parameters `(event)`)
            (( `(`)
            (identifier `event`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `_state.unhandled_input(event)`)
                (attribute `_state.unhandled_input(event)`)
                    (identifier `_state`)
                    (. `.`)
                    (attribute_call `unhandled_input(event)`)
                        (identifier `unhandled_input`)
                        (arguments `(event)`)
                            (( `(`)
                            (identifier `event`)
                            () `)`)
    (function_definition)
        (func `func`)
        (name `_physics_process`)
        (parameters `(delta)`)
            (( `(`)
            (identifier `delta`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `_state.physics_process(delta)`)
                (attribute `_state.physics_process(delta)`)
                    (identifier `_state`)
                    (. `.`)
                    (attribute_call `physics_process(delta)`)
                        (identifier `physics_process`)
                        (arguments `(delta)`)
                            (( `(`)
                            (identifier `delta`)
                            () `)`)
    (function_definition)
        (func `func`)
        (name `transition_to`)
        (parameters `(target_state_path, msg={})`)
            (( `(`)
            (identifier `target_state_path`)
            (, `,`)
            (default_parameter `msg={}`)
                (identifier `msg`)
                (= `=`)
                (dictionary `{}`)
                    ({ `{`)
                    (} `}`)
            () `)`)
        (: `:`)
        (body)
            (if_statement)
                (if `if`)
                (unary_operator `not has_node(target_state_path)`)
                    (not `not`)
                    (call `has_node(target_state_path)`)
                        (identifier `has_node`)
                        (arguments `(target_state_path)`)
                            (( `(`)
                            (identifier `target_state_path`)
                            () `)`)
                (: `:`)
                (body)
                    (return_statement `return`)
                        (return `return`)
            (variable_statement `var target_state = get_node(target_state_path)`)
                (var `var`)
                (name `target_state`)
                (= `=`)
                (call `get_node(target_state_path)`)
                    (identifier `get_node`)
                    (arguments `(target_state_path)`)
                        (( `(`)
                        (identifier `target_state_path`)
                        () `)`)
            (expression_statement `assert(target_state.is_composite == false)`)
                (call `assert(target_state.is_composite == false)`)
                    (identifier `assert`)
                    (arguments `(target_state.is_composite == false)`)
                        (( `(`)
                        (binary_operator `target_state.is_composite == false`)
                            (attribute `target_state.is_composite`)
                                (identifier `target_state`)
                                (. `.`)
                                (identifier `is_composite`)
                            (== `==`)
                            (false `false`)
                        () `)`)
            (expression_statement `_state.exit()`)
                (attribute `_state.exit()`)
                    (identifier `_state`)
                    (. `.`)
                    (attribute_call `exit()`)
                        (identifier `exit`)
                        (arguments `()`)
                            (( `(`)
                            () `)`)
            (expression_statement `self._state = target_state`)
                (assignment `self._state = target_state`)
                    (attribute `self._state`)
                        (identifier `self`)
                        (. `.`)
                        (identifier `_state`)
                    (= `=`)
                    (identifier `target_state`)
            (expression_statement `_state.enter(msg)`)
                (attribute `_state.enter(msg)`)
                    (identifier `_state`)
                    (. `.`)
                    (attribute_call `enter(msg)`)
                        (identifier `enter`)
                        (arguments `(msg)`)
                            (( `(`)
                            (identifier `msg`)
                            () `)`)
            (expression_statement `Events.player_state_changed.emit(_state.name)`)
                (attribute `Events.player_state_changed.emit(_state.name)`)
                    (identifier `Events`)
                    (. `.`)
                    (identifier `player_state_changed`)
                    (. `.`)
                    (attribute_call `emit(_state.name)`)
                        (identifier `emit`)
                        (arguments `(_state.name)`)
                            (( `(`)
                            (attribute `_state.name`)
                                (identifier `_state`)
                                (. `.`)
                                (identifier `name`)
                            () `)`)
    (function_definition)
        (func `func`)
        (name `set_is_active`)
        (parameters `(value)`)
            (( `(`)
            (identifier `value`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `is_active = value`)
                (assignment `is_active = value`)
                    (identifier `is_active`)
                    (= `=`)
                    (identifier `value`)
            (expression_statement `set_physics_process(value)`)
                (call `set_physics_process(value)`)
                    (identifier `set_physics_process`)
                    (arguments `(value)`)
                        (( `(`)
                        (identifier `value`)
                        () `)`)
            (expression_statement `set_process_unhandled_input(value)`)
                (call `set_process_unhandled_input(value)`)
                    (identifier `set_process_unhandled_input`)
                    (arguments `(value)`)
                        (( `(`)
                        (identifier `value`)
                        () `)`)
            (expression_statement `set_block_signals(not value)`)
                (call `set_block_signals(not value)`)
                    (identifier `set_block_signals`)
                    (arguments `(not value)`)
                        (( `(`)
                        (unary_operator `not value`)
                            (not `not`)
                            (identifier `value`)
                        () `)`)
    (function_definition)
        (func `func`)
        (name `set_state`)
        (parameters `(value)`)
            (( `(`)
            (identifier `value`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `_state = value`)
                (assignment `_state = value`)
                    (identifier `_state`)
                    (= `=`)
                    (identifier `value`)
            (expression_statement `_state_name = _state.name`)
                (assignment `_state_name = _state.name`)
                    (identifier `_state_name`)
                    (= `=`)
                    (attribute `_state.name`)
                        (identifier `_state`)
                        (. `.`)
                        (identifier `name`)
    (function_definition)
        (func `func`)
        (name `_on_state_changed`)
        (parameters `(previous, new)`)
            (( `(`)
            (identifier `previous`)
            (, `,`)
            (identifier `new`)
            () `)`)
        (: `:`)
        (body)
            (expression_statement `print("state changed")`)
                (call `print("state changed")`)
                    (identifier `print`)
                    (arguments `("state changed")`)
                        (( `(`)
                        (string `"state changed"`)
                            (" `"`)
                            (" `"`)
                        () `)`)
            (expression_statement `state_changed.emit()`)
                (attribute `state_changed.emit()`)
                    (identifier `state_changed`)
                    (. `.`)
                    (attribute_call `emit()`)
                        (identifier `emit`)
                        (arguments `()`)
                            (( `(`)
                            () `)`)
    (class_definition)
        (class `class`)
        (name `State`)
        (: `:`)
        (body)
            (variable_statement `var foo = 0`)
                (var `var`)
                (name `foo`)
                (= `=`)
                (integer `0`)
            (constructor_definition)
                (func `func`)
                (_init `_init`)
                (parameters `()`)
                    (( `(`)
                    () `)`)
                (: `:`)
                (body)
                    (expression_statement `print("Hello!")`)
                        (call `print("Hello!")`)
                            (identifier `print`)
                            (arguments `("Hello!")`)
                                (( `(`)
                                (string `"Hello!"`)
                                    (" `"`)
                                    (" `"`)
                                () `)`)

